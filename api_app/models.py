from django.db import models

# Create your models here.
class TableOutput(models.Model):
    field1 = models.IntegerField()
    identity_LineItemId = models.TextField(db_column='identity/LineItemId')

    bill_InvoiceId = models.IntegerField(db_column='bill/InvoiceId')
    bill_BillingEntity = models.TextField(db_column='bill/BillingEntity')
    bill_BillType = models.TextField(db_column='bill/BillType')
    bill_PayerAccountId = models.FloatField(db_column='bill/PayerAccountId')
    bill_BillingPeriodStartDate = models.TextField(db_column='bill/BillingPeriodStartDate')

    lineItem_UsageAccountId = models.FloatField(db_column='lineItem/UsageAccountId')
    lineItem_LineItemType = models.TextField(db_column='lineItem/LineItemType')
    lineItem_UsageStartDate = models.TextField(db_column='lineItem/UsageStartDate')
    lineItem_UsageEndDate = models.TextField(db_column='lineItem/UsageEndDate')
    lineItem_UsageType = models.TextField(db_column='lineItem/UsageType')
    lineItem_Operation = models.TextField(db_column='lineItem/Operation')
    lineItem_AvailabilityZone = models.TextField(db_column='lineItem/AvailabilityZone')
    lineItem_ResourceId = models.TextField(db_column='lineItem/ResourceId')
    lineItem_UsageAmount = models.FloatField(db_column='lineItem/UsageAmount')
    lineItem_NormalizationFactor = models.TextField(db_column='lineItem/NormalizationFactor')
    lineItem_NormalizedUsageAmount = models.TextField(db_column='lineItem/NormalizedUsageAmount')
    lineItem_UnblendedRate = models.TextField(db_column='lineItem/UnblendedRate')
    lineItem_UnblendedCost = models.FloatField(db_column='lineItem/UnblendedCost')
    lineItem_LineItemDescription = models.TextField(db_column='lineItem/LineItemDescription')

    product_ProductName = models.TextField(db_column='product/ProductName')
    product_cacheEngine = models.TextField(db_column='product/cacheEngine')
    product_databaseEdition = models.TextField(db_column='product/databaseEdition')
    product_databaseEngine = models.TextField(db_column='product/databaseEngine')
    product_deploymentOption = models.TextField(db_column='product/deploymentOption')
    product_instanceType = models.TextField(db_column='product/instanceType')
    product_instanceTypeFamily = models.TextField(db_column='product/instanceTypeFamily')
    product_licenseModel = models.TextField(db_column='product/licenseModel')
    product_location = models.TextField(db_column='product/location')
    product_operatingSystem = models.TextField(db_column='product/operatingSystem')
    product_region = models.TextField(db_column='product/region')
    product_tenancy = models.TextField(db_column='product/tenancy')

    pricing_LeaseContractLength = models.TextField(db_column='pricing/LeaseContractLength')
    pricing_OfferingClass = models.TextField(db_column='pricing/OfferingClass')
    pricing_PurchaseOption = models.TextField(db_column='pricing/PurchaseOption')
    pricing_publicOnDemandRate = models.TextField(db_column='pricing/publicOnDemandRate')
    pricing_term = models.TextField(db_column='pricing/term')

    reservation_AmortizedUpfrontCostForUsage = models.TextField(db_column='reservation/AmortizedUpfrontCostForUsage')
    reservation_AmortizedUpfrontFeeForBillingPeriod = models.TextField(db_column='reservation/AmortizedUpfrontFeeForBillingPeriod')
    reservation_EffectiveCost = models.TextField(db_column='reservation/EffectiveCost')
    reservation_EndTime = models.TextField(db_column='reservation/EndTime')
    reservation_ModificationStatus = models.TextField(db_column='reservation/ModificationStatus')
    reservation_NumberOfReservations = models.TextField(db_column='reservation/NumberOfReservations')
    reservation_RecurringFeeForUsage = models.TextField(db_column='reservation/RecurringFeeForUsage')
    reservation_ReservationARN = models.TextField(db_column='reservation/ReservationARN')
    reservation_StartTime = models.TextField(db_column='reservation/StartTime')
    reservation_SubscriptionId = models.TextField(db_column='reservation/SubscriptionId')
    reservation_TotalReservedUnits = models.TextField(db_column='reservation/TotalReservedUnits')
    reservation_UnusedAmortizedUpfrontFeeForBillingPeriod = models.TextField(db_column='reservation/UnusedAmortizedUpfrontFeeForBillingPeriod')
    reservation_UnusedNormalizedUnitQuantity = models.TextField(db_column='reservation/UnusedNormalizedUnitQuantity')
    reservation_UnusedQuantity = models.TextField(db_column='reservation/UnusedQuantity')
    reservation_UnusedRecurringFee = models.TextField(db_column='reservation/UnusedRecurringFee')
    reservation_UpfrontValue = models.TextField(db_column='reservation/UpfrontValue')

    savingsPlan_TotalCommitmentToDate = models.TextField(db_column='savingsPlan/TotalCommitmentToDate')
    savingsPlan_SavingsPlanARN = models.TextField(db_column='savingsPlan/SavingsPlanARN')
    savingsPlan_SavingsPlanRate = models.TextField(db_column='savingsPlan/SavingsPlanRate')
    savingsPlan_UsedCommitment = models.TextField(db_column='savingsPlan/UsedCommitment')
    savingsPlan_SavingsPlanEffectiveCost = models.TextField(db_column='savingsPlan/SavingsPlanEffectiveCost')
    savingsPlan_AmortizedUpfrontCommitmentForBillingPeriod = models.TextField(db_column='savingsPlan/AmortizedUpfrontCommitmentForBillingPeriod')
    savingsPlan_RecurringCommitmentForBillingPeriod = models.TextField(db_column='savingsPlan/RecurringCommitmentForBillingPeriod')
    savingsPlan_PurchaseTerm = models.TextField(db_column='savingsPlan/PurchaseTerm')
    savingsPlan_PaymentOption = models.TextField(db_column='savingsPlan/PaymentOption')
    savingsPlan_OfferingType = models.TextField(db_column='savingsPlan/OfferingType')
    savingsPlan_Region = models.TextField(db_column='savingsPlan/Region')
    savingsPlan_StartTime = models.TextField(db_column='savingsPlan/StartTime')
    savingsPlan_EndTime = models.TextField(db_column='savingsPlan/EndTime')

    resourceTags_aws_createdBy = models.TextField(db_column='resourceTags/aws:createdBy')
    resourceTags_user_Billing = models.TextField(db_column='resourceTags/user:Billing')
    resourceTags_user_EBS = models.TextField(db_column='resourceTags/user:EBS')
    resourceTags_user_EC2 = models.TextField(db_column='resourceTags/user:EC2')
    resourceTags_user_Environment = models.TextField(db_column='resourceTags/user:Environment')
    resourceTags_user_Name = models.TextField(db_column='resourceTags/user:Name')
    resourceTags_user_Project = models.TextField(db_column='resourceTags/user:Project')
    resourceTags_user_RDS = models.TextField(db_column='resourceTags/user:RDS')
    resourceTags_user_Site = models.TextField(db_column='resourceTags/user:Site')
    resourceTags_user_autotag = models.TextField(db_column='resourceTags/user:autotag')
    resourceTags_user_ext01 = models.TextField(db_column='resourceTags/user:ext01')
    
    class Meta:
        managed = False
        db_table = "output"